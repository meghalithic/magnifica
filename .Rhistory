per.var.ow.m[i] <- exp(mean_by_formation$var.ow.m[i])/exp(mean_by_formation$var.ow.m[mean_by_formation$formation == "modern"])
per.var.oh[i] <- exp(mean_by_formation$var.oh[i])/exp(mean_by_formation$var.oh[mean_by_formation$formation == "modern"])
per.var.o.side[i] <- exp(mean_by_formation$var.o.side[i])/exp(mean_by_formation$var.o.side[mean_by_formation$formation == "modern"])
per.var.c.side[i] <- exp(mean_by_formation$var.c.side[i])/exp(mean_by_formation$var.c.side[mean_by_formation$formation == "modern"])
}
per.var.zh <- c()
per.var.mpw.b <- c()
per.var.cw.m <- c()
per.var.cw.d <- c()
per.var.ow.m <- c()
per.var.oh <- c()
per.var.o.side <- c()
per.var.c.side <- c()
for(i in 1:6){
per.var.zh[i] <- exp(mean_by_formation$var.zh[i])/exp(mean_by_formation$var.zh[mean_by_formation$formation == "modern"])
per.var.mpw.b[i] <- exp(mean_by_formation$var.mpw.b[i])/exp(mean_by_formation$var.mpw.b[mean_by_formation$formation == "modern"])
per.var.cw.m[i] <- exp(mean_by_formation$var.cw.m[i])/exp(mean_by_formation$var.cw.m[mean_by_formation$formation == "modern"])
per.var.cw.d[i] <- exp(mean_by_formation$var.cw.d[i])/exp(mean_by_formation$var.cw.d[mean_by_formation$formation == "modern"])
per.var.ow.m[i] <- exp(mean_by_formation$var.ow.m[i])/exp(mean_by_formation$var.ow.m[mean_by_formation$formation == "modern"])
per.var.oh[i] <- exp(mean_by_formation$var.oh[i])/exp(mean_by_formation$var.oh[mean_by_formation$formation == "modern"])
per.var.o.side[i] <- exp(mean_by_formation$var.o.side[i])/exp(mean_by_formation$var.o.side[mean_by_formation$formation == "modern"])
per.var.c.side[i] <- exp(mean_by_formation$var.c.side[i])/exp(mean_by_formation$var.c.side[mean_by_formation$formation == "modern"])
}
per.var.zh
1-per.var.zh/100
per.var.zh/100
exp(mean_by_formation$var.zh)*1.002
exp(mean_by_formation$var.zh)*1.0028090
exp(mean_by_formation$var.zh[mean_by_formation$formation == "modern"])*1.0028090
exp(mean_by_formation$var.zh[1])
exp(mean_by_formation$var.zh[7])
1.014788/1.011946
exp(mean_by_formation$var.zh[7])*.1.2
exp(mean_by_formation$var.zh[7])*1.2
1.011946*1.0028090
1.011946*.0028090
0.002842556+1.011946
(1-per.var.zh)*100
per.var.zh
(per.var.zh-1)*100
(per.var.zh-1)*100
(per.var.mpw.b-1)*100
(per.var.cw.m-1)*100
(per.var.cw.d-1)*100
(per.var.ow.m-1)*100
(per.var.oh-1)*100
(per.var.o.side-1)*100
(per.var.c.side-1)*100
(per.var.zh-1)*100 #less than.
mean(sum((per.var.zh-1)*100))
mean(sum((per.var.mpw.b-1)*100))
mean(sum((per.var.cw.m-1)*100))
mean(sum((per.var.cw.d-1)*100))
mean(sum((per.var.ow.m-1)*100))
mean(sum((per.var.oh-1)*100))
mean(sum((per.var.o.side-1)*100))
mean(sum((per.var.c.side-1)*100))
mean(sum((per.var.c.side-1)*100)) #avg 4%
per.var.c.side
(per.var.c.side-1)*100)
(per.var.c.side-1)*100
sum((per.var.c.side-1)*100)
mean((per.var.zh-1)*100) #less than 1 % (.9%)
mean((per.var.mpw.b-1)*100) #avg. 2.6%
mean((per.var.cw.m-1)*100) #avg 1.1%
mean((per.var.cw.d-1)*100) #avg 1.5%
mean((per.var.ow.m-1)*100) #avg 1.1%
mean((per.var.oh-1)*100) #avg .6 %
mean((per.var.o.side-1)*100) #less than 1 % (.9%)
mean((per.var.c.side-1)*100) #avg 4%
df <- read.csv("Data/traits_27May2024.csv", #30Nov2023,29Sept2023.csv",
header = TRUE)
mod <- df[df$formation == "modern",]
mean_by_formation
df %>% #use this going forward
dplyr::group_by(formation, colony.id) %>%
dplyr::summarize(n.zooid = length(zooid.id),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.oh = mean(oh, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T)) %>%
as.data.frame()
df %>% #use this going forward
dplyr::group_by(formation, colony.id) %>%
dplyr::summarize(n.zooid = length(zooid.id),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.oh = mean(oh, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T)) %>%
as.data.frame()
colnames(df)
str(df)
df$formation <- factor(df$formation,
levels = c("NKLS", "NKBS", "Tewkesbury",
"Upper Kai-Iwi", "Tainui",
"SHCSBSB", "modern"))
#### MODERN ----
#why is modern so different??
df$formation <- factor(df$formation,
levels = c("NKLS", "NKBS", "Tewkesbury",
"Upper Kai-Iwi", "Tainui",
"SHCSBSB", "modern"))
df %>% #use this going forward
dplyr::group_by(formation, colony.id) %>%
dplyr::summarize(n.zooid = length(zooid.id),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.oh = mean(oh, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T)) %>%
as.data.frame()
df %>% #use this going forward
dplyr::group_by(formation) %>%
dplyr::summarize(n.col = length(unique(colony.id)),
n.zooid = length(zooid.id),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.oh = mean(oh, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T)) %>%
as.data.frame()
p.zh = ggplot(data = df) +
geom_density(aes(x = df[, traits[1]],
group = formation,
col = formation)) +
plot.theme +
scale_x_continuous(name = traits[1]) +
scale_color_manual(values = col.form)
df <- read.csv("./Results/colonies.traits_27May2024.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
# arrange formations from oldest to youngest
df$formation <- factor(df$formation, levels = c("NKLS", "NKBS", "Tewkesbury",
"Upper Kai-Iwi",  "Tainui",
"SHCSBSB", "modern"))
formation_list <- unique(df$formation)
length(formation_list) #7
#same order as in df
names(df)
traits = names(df[, c("ln.zh", "ln.mpw.b", "ln.cw.m", "ln.cw.d",
"ln.ow.m", "ln.oh", "ln.c.side", "ln.o.side")])
length(traits) #8
##### TRIM DATASET ----
df.trim <- df %>%
dplyr::select(zooid.id, colony.id, formation, matches(traits))
colNums <- match(c(traits, "zooid.id"), names(df.trim))
df = as.data.frame(df.trim)
p.zh = ggplot(data = df) +
geom_density(aes(x = df[, traits[1]],
group = formation,
col = formation)) +
plot.theme +
scale_x_continuous(name = traits[1]) +
scale_color_manual(values = col.form)
p.mpw.b = ggplot(data = df) +
geom_density(aes(x = df[, traits[2]],
group = formation,
col = formation)) +
plot.theme +
scale_x_continuous(name = traits[2]) +
scale_color_manual(values = col.form)
p.cw.m = ggplot(data = df) +
geom_density(aes(x = df[, traits[3]],
group = formation,
col = formation)) +
plot.theme +
scale_x_continuous(name = traits[3]) +
scale_color_manual(values = col.form)
p.cw.d = ggplot(data = df) +
geom_density(aes(x = df[, traits[4]],
group = formation,
col = formation)) +
plot.theme +
scale_x_continuous(name = traits[4]) +
scale_color_manual(values = col.form)
p.ow.m = ggplot(data = df) +
geom_density(aes(x = df[, traits[5]],
group = formation,
col = formation)) +
plot.theme +
scale_x_continuous(name = traits[5]) +
scale_color_manual(values = col.form)
p.oh = ggplot(data = df) +
geom_density(aes(x = df[, traits[6]],
group = formation,
col = formation)) +
plot.theme +
scale_x_continuous(name = traits[6]) +
scale_color_manual(values = col.form)
p.c.side = ggplot(data = df) +
geom_density(aes(x = df[, traits[7]],
group = formation,
col = formation)) +
plot.theme +
scale_x_continuous(name = traits[7]) +
scale_color_manual(values = col.form)
p.o.side = ggplot(data = df) +
geom_density(aes(x = df[, traits[8]],
group = formation,
col = formation)) +
plot.theme +
scale_x_continuous(name = traits[8]) +
scale_color_manual(values = col.form)
Fig = list(p.zh, p.mpw.b, p.cw.m, p.cw.d, p.ow.m, p.oh, p.c.side, p.o.side)
ml <- marrangeGrob(Fig, nrow = 4, ncol = 2)
ml
formation_list
df %>%
dplyr::group_by(formation) %>%
dplyr::summarize(n.col = length(unique(colony.id)),
n.zooid = length(zooid.id),
avg.zh = mean(zh, na.rm = T),
avg.mpw.b = mean(mpw.b, na.rm = T),
avg.cw.m = mean(cw.m, na.rm = T),
avg.cw.d = mean(cw.d, na.rm = T),
avg.ow.m = mean(ow.m, na.rm = T),
avg.oh = mean(oh, na.rm = T),
avg.o.side = mean(o.side, na.rm = T),
avg.c.side = mean(c.side, na.rm = T)) %>%
as.data.frame()
colnames(df)
#note: using df from 4-exploratory analysis, after get rid of small colonies
df %>%
dplyr::group_by(formation) %>%
dplyr::summarize(n.col = length(unique(colony.id)),
n.zooid = length(zooid.id),
avg.zh = mean(exp(ln.zh, na.rm = T)),
avg.mpw.b = mean(exp(ln.mpw.b, na.rm = T)),
avg.cw.m = mean(exp(ln.cw.m, na.rm = T)),
avg.cw.d = mean(exp(ln.cw.d, na.rm = T)),
avg.ow.m = mean(exp(ln.ow.m, na.rm = T)),
avg.oh = mean(exp(ln.oh, na.rm = T)),
avg.o.side = mean(exp(ln.o.side, na.rm = T)),
avg.c.side = mean(exp(ln.c.side, na.rm = T))) %>%
as.data.frame()
unique(df$formation)
#note: using df from 4-exploratory analysis, after get rid of small colonies
df %>%
dplyr::group_by(formation) %>%
dplyr::summarize(n.col = length(unique(colony.id)),
n.zooid = length(zooid.id),
avg.zh = mean(exp(ln.zh), na.rm = T),
avg.mpw.b = mean(exp(ln.mpw.b), na.rm = T),
avg.cw.m = mean(exp(ln.cw.m), na.rm = T),
avg.cw.d = mean(exp(ln.cw.d), na.rm = T),
avg.ow.m = mean(exp(ln.ow.m), na.rm = T),
avg.oh = mean(exp(ln.oh), na.rm = T),
avg.o.side = mean(exp(ln.o.side), na.rm = T),
avg.c.side = mean(exp(ln.c.side), na.rm = T)) %>%
as.data.frame()
G_PC_dist
g.eig_variances
g.eig_per
P_PC_dist
g.eig_per$rownames.g.eig_per_mat. <- factor(g.eig_per$rownames.g.eig_per_mat.,
levels = c("NKLS", "NKBS", "Tewkesbury",
"Upper Kai-Iwi", "Tainui",
"SHCSBSB", "modern"))
#dev.off()
G_PC_dist = ggplot(g.eig_per,
aes(x = variable, y = value,
group = rownames.g.eig_per_mat.,
colour = rownames.g.eig_per_mat.)) +
geom_line(aes(linetype = rownames.g.eig_per_mat.)) +
geom_point() +
plot.theme +
theme_linedraw() +
scale_x_discrete("Principal component rank",
labels = c("PC1", "PC2", "PC3", "PC4",
"PC5", "PC6", "PC7", "PC8")) +
scale_y_continuous("%Variation in the PC",
limits = c(-.02, 0.7))
G_PC_dist
ggsave(G_PC_dist,
file = "./Results/G.PC.dist.png",
width = 14, height = 10, units = "cm")
#dev.off()
G_PC_dist = ggplot(g.eig_per,
aes(x = variable, y = value,
group = rownames.g.eig_per_mat.,
colour = rownames.g.eig_per_mat.)) +
geom_line(aes(linetype = rownames.g.eig_per_mat.)) +
geom_point() +
plot.theme +
theme_linedraw() +
scale_x_discrete("Principal component rank",
labels = c("PC1", "PC2", "PC3", "PC4",
"PC5", "PC6", "PC7", "PC8")) +
scale_y_continuous("%Variation in the PC",
limits = c(-.02, 0.7)) +
scale_color_manual(values = col.form)
G_PC_dist
G_PC_dist
q
ggsave(G_PC_dist,
file = "./Results/G.PC.dist.png",
width = 14, height = 10, units = "cm")
ggsave(G_PC_dist.3,
file = "./Results/G.PC.dist.3zoo.png",
width = 14, height = 10, units = "cm") #modern still wonky
#https://www.statology.org/principal-components-analysis-in-r/
G_pc <- lapply(Gmat, function (x) {prcomp(x, scale = TRUE)})
setwd("~/Documents/GitHub/bryozoa/magnifica/Scripts")
setwd("~/Documents/GitHub/bryozoa/magnifica/")
source("./Scripts/0-env.R")
images.df <- read.csv("./Data/images.filtered_1Jul2024.csv", #images.merged_30Nov2023.csv,
header = TRUE,
sep = ",")
#### EXPLORE DATA ----
nrow(images.df) #7412
#### MANIPULATE DATA ####
images.df$formation <- factor(images.df$formation,
levels = c("NKLS", "NKBS", "Tewkesbury",
"Upper Kai-Iwi", "Tainui",
"SHCSBSB", "modern"))
colnames(images.df)[colnames(images.df) == 'new.id'] <- 'zooid.id'
colnames(images.df)[colnames(images.df) == 'specimenNR'] <- 'colony.id'
#### CALCULATE DISTANCES ----
#measurements based off Voje et al. 2020 https://doi.org/10.5061/dryad.t4b8gthxm
#zh is similar to LZ
#cw.m is similar to WZ
#oh is similar to LO
#ow.m is similar to WO
#see "stegs_linear_24Mar2023.png" for linear measurements
#z = zooid
#h = height
#o = operculum
#l = left
#r = right
#w = width
#m = mid
#b = base
#mp = median process
#c = cryptocyst
#d = distal
#X = |(X1-X0)|
#Y = |(Y1-Y0)|
#D^2 = X^2 + Y^2
## Zooid height (maximum height at centerline): 4 to 12
images.df$zh.px <- len.py(images.df$X4, images.df$X12,
images.df$Y4, images.df$Y12)
## Operculum height of left side: 4 to 20
images.df$oh.l.px <- len.py(images.df$X4, images.df$X20,
images.df$Y4, images.df$Y20)
## Operculum height of right side: 4 to 21
images.df$oh.r.px <- len.py(images.df$X4, images.df$X21,
images.df$Y4, images.df$Y21)
## Operculum mid-width (maximum width at centerline): 19 to 0
images.df$ow.m.px <- len.py(images.df$X19, images.df$X0,
images.df$Y19, images.df$Y0)
## Operculum base width: 21 to 20
images.df$ow.b.px <- len.py(images.df$X21, images.df$X20,
images.df$Y21, images.df$Y20)
## Operculum side length of right side: 21 to 18
images.df$o.side.r.px <- len.py(images.df$X21, images.df$X18,
images.df$Y21, images.df$Y18)
## Operculum side length of left side: 20 to 17
images.df$o.side.l.px <- len.py(images.df$X20, images.df$X17,
images.df$Y20, images.df$Y17)
## Median process base width: 5 to 6
images.df$mpw.b.px <- len.py(images.df$X5, images.df$X6,
images.df$Y5, images.df$Y6)
## Cryptocyst mid-width: 10 to 11
images.df$cw.m.px <- len.py(images.df$X10, images.df$X11,
images.df$Y10, images.df$Y11)
## Cryptocyst base width: 9 to 1
#images.df$cw.b.px <- len.py(images.df$X9, images.df$X1,
#                         images.df$Y9, images.df$Y1)
## Cryptocyst distal width: 8 to 7
images.df$cw.d.px <- len.py(images.df$X8, images.df$X7,
images.df$Y8, images.df$Y7)
## Cryptocyst side length of right side: 1 to 7
images.df$c.side.r.px <- len.py(images.df$X1, images.df$X7,
images.df$Y1, images.df$Y7)
## Cryptocyst side length of left side: 9 to 8
images.df$c.side.l.px <- len.py(images.df$X9, images.df$X8,
images.df$Y9, images.df$Y8)
## centroid size
#It is the square root of the sum of squared distances of all the
#landmarks you collected in a structure from their centroid.
##### MAKE TABLE & SCALE CORRECT -----
#For 30x it is 0.606 pixels per um(micrometer)
#all bleed are at 40x, which is 0.825 pixels per um
#the only bleed numbers included are: 686, 244, 242; form.no = BLEED
#recalculate them manually
images.df$zh <- images.df$zh.px/images.df$scale
images.df$oh.l <- images.df$oh.l.px/images.df$scale
images.df$oh.r <- images.df$oh.r.px/images.df$scale
images.df$ow.b <- images.df$ow.b.px/images.df$scale
images.df$ow.m <- images.df$ow.m.px/images.df$scale
images.df$mpw.b <- images.df$mpw.b.px/images.df$scale
images.df$cw.m <- images.df$cw.m.px/images.df$scale
images.df$cw.d <- images.df$cw.d.px/images.df$scale
images.df$c.side.r <- images.df$c.side.r.px/images.df$scale
images.df$c.side.l <- images.df$c.side.l.px/images.df$scale
images.df$o.side.r <- images.df$o.side.r.px/images.df$scale
images.df$o.side.l <- images.df$o.side.l.px/images.df$scale
##### CHECK FOR ASYMMETRY -----
p.o.side.rl <- ggplot(images.df) +
geom_point(aes(x = o.side.l, y = o.side.r)) + #,
#group = formation, fill = formation, col = formation)) +
ggtitle(paste0("Operculum Side Length, N zooids = ", nrow(images.df), ", N colony = ", length(unique(images.df$colony.id)))) +
plot.theme +
theme(legend.position = "top") +
scale_y_continuous(name = "Operculum Length Right Side (pixels)") +
scale_x_continuous(name = "Operculum Length Left Side (pixels)")
#modern doesn't look that different from everything else
ggsave(p.o.side.rl,
file = "./Results/operculum.length.png", width = 14, height = 10, units = "cm")
summary(lm(images.df$o.side.r ~ images.df$o.side.l))
# slope = 0.92; p-value < 2.2e-16; r2 = 0.95
p.c.side.rl <- ggplot(images.df) +
geom_point(aes(x = c.side.l, y = c.side.l)) + #,
#group = formation, fill = formation, col = formation)) +
ggtitle(paste0("Cryptocyst Side Length, N zooids = ", nrow(images.df), ", N colony = ", length(unique(images.df$colony.id)))) +
plot.theme +
scale_y_continuous(name = "Cryptocyst Length Right Side (pixels)") +
scale_x_continuous(name = "Cryptocyst Length Left Side (pixels)")
ggsave(p.c.side.rl,
file = "./Results/cryptocyst.length.png",
width = 14, height = 10, units = "cm")
summary(lm(images.df$c.side.r ~ images.df$c.side.l))
# slope = 0.86; p-value: < 2.2e-16; r2 = 0.78
## right v left side of operculum height
p.oh.rl <- ggplot(images.df) +
geom_point(aes(x = oh.l, y = oh.r)) + #,
#group = formation, fill = formation, col = formation)) +
ggtitle(paste0("Operculum Height, N zooids = ", nrow(images.df), ", N colony = ", length(unique(images.df$colony.id)))) +
plot.theme +
scale_y_continuous(name = "Operculum Height Right Side (pixels)") +
scale_x_continuous(name = "Operculum Height Left Side (pixels)")
ggsave(p.oh.rl,
file = "./Results/operculum.height.png",
width = 14, height = 10, units = "cm")
summary(lm(images.df$oh.r ~ images.df$oh.l))
# slope = 0.92; p-value < 2.2e-16; r2 = .89; no asymmetry
## Operculum average side length:
images.df$o.side <- rowMeans(cbind(images.df$o.side.l, images.df$o.side.r))
## Cryptocyst average side length:
images.df$c.side <- rowMeans(cbind(images.df$c.side.l, images.df$c.side.r))
## Operculum height
images.df$oh <- (.5/images.df$ow.b)*sqrt(images.df$ow.b+images.df$oh.r+images.df$oh.l)
##### TRIM TO TRAITS ONLY ----
traits.df <- images.df %>%
dplyr::select(box_id, image,
source, Mag,
colony.id, zooid.id,
formation, locality,
zh, oh, ow.m, ow.b,
mpw.b, cw.m, cw.d,
o.side, c.side)
colnames(traits.df)[colnames(traits.df) == 'box_id'] <- 'boxID'
##### LN TRANSFORM -----
traits.df$ln.zh <- log(traits.df$zh)
traits.df$ln.mpw.b <- log(traits.df$mpw.b)
traits.df$ln.cw.m <- log(traits.df$cw.m)
traits.df$ln.cw.d <- log(traits.df$cw.d)
traits.df$ln.ow.m <- log(traits.df$ow.m)
traits.df$ln.oh <- log(traits.df$oh)
traits.df$ln.o.side <- log(traits.df$o.side)
traits.df$ln.c.side <- log(traits.df$c.side)
#cw.b too variable??
##### MINIMUM 3 ZOOIDS PER COLONY -----
samp.zoo <- traits.df %>%
dplyr::group_by(colony.id) %>%
dplyr::summarize(n.zooid = length(unique(zooid.id)),
formation = formation[1]) %>%
as.data.frame()
nrow(samp.zoo) #822 colonies total
too.few <- samp.zoo[samp.zoo$n.zooid < 3,]
nrow(too.few) #60 colonies to remove
table(too.few$formation)
#see which ones are removed and if can't redo them
keep <- samp.zoo$colony.id[samp.zoo$n.zooid >= 3]
length(keep) #760 colonies
df <- traits.df[traits.df$colony.id %in% keep,]
nrow(df) #7309
df %>%
group_by(formation) %>%
summarise(n.col = length(unique(colony.id)))
df %>%
group_by(formation) %>%
summarise(n.image = length(unique(image)))
length(unique(df$image)) #1578
length(unique(df$colony.id[df$Mag != "x30"]))
colnames(df)
View(df[df$Mag != "x30", c(1:8)])
unique(df$colony.id[df$Mag != "x30"])
View(df[df$Mag != "x30", c(1:8)])
#trim to just 30
df.30 <- df[df$Mag == "x30",]
df.30 %>%
group_by(formation) %>%
summarise(n.col = length(unique(colony.id))) #still 30 in modern! woo!
length(unique(df.30$colony.id[df.30$formation == "modern"]))
View(df.30[df.30$formation == "modern", c(1:8)])
unique(df.30$colony.id[df.30$formation == "modern"])
